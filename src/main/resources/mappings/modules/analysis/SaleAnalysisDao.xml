<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjy.losonkei.modules.analysis.dao.SaleAnalysisDao">

	<select id="goodsCount" resultType="com.zjy.losonkei.modules.goods.entity.Goods" parameterType="com.zjy.losonkei.modules.goods.entity.Goods">
		SELECT
		a.id AS "id",
		a.goods_name AS "goodsName",
		a.sales_amount AS "salesAmount",
		a.visit_amount AS "visitAmount"
		FROM goods a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.state != #{STATE_INVENTING}
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sort DESC
			</otherwise>
		</choose>
	</select>

	<select id="getOrdersCount" parameterType="com.zjy.losonkei.modules.analysis.entity.Analysis" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM orders
		<where>
			pay_state != #{orders.PAY_STATE1}
			AND
			create_date BETWEEN #{beginDate} AND #{endDate}
		</where>
		   ORDER BY create_date DESC
	</select>

	<select id="getPriceAllCount" parameterType="com.zjy.losonkei.modules.analysis.entity.Analysis" resultType="java.math.BigDecimal">
		SELECT IFNULL(SUM(price_all),0) AS "priceAll" FROM orders
		<where>
			pay_state != #{orders.PAY_STATE1}
			AND
			create_date BETWEEN #{beginDate} AND #{endDate}
		</where>
		ORDER BY create_date DESC
	</select>

	<select id="getProfitCount" parameterType="com.zjy.losonkei.modules.analysis.entity.Analysis" resultType="java.math.BigDecimal">
		SELECT IFNULL(SUM(price_all),0) - IFNULL(SUM(cost_all),0) - IFNULL(SUM(refund),0) AS "amount" FROM orders
		<where>
			finish_date BETWEEN #{beginDate} AND #{endDate}
		</where>
		ORDER BY finish_date DESC
	</select>

	<select id="getGoodsSaleCount" parameterType="com.zjy.losonkei.modules.analysis.entity.Analysis" resultType="java.lang.Integer">
		SELECT IFNULL(SUM(d.goods_amount),0) - IFNULL(SUM(d.back_amount),0) AS "amount" FROM
		orders_details d LEFT JOIN orders o ON o.id = d.orders_id
		<where>
			finish_date BETWEEN #{beginDate} AND #{endDate}
		</where>
		ORDER BY finish_date DESC
	</select>
</mapper>