<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjy.losonkei.modules.goods.dao.GoodsSpecificationValueDao">
    
	<sql id="goodsSpecificationValueColumns">
		a.id AS "id",
		a.specification_id AS "goodsSpecification",
		a.specification_value AS "specificationValue",
		a.goods_id AS "goodsId",
		a.specification_group AS "specificationGroup",
		a.img_url AS "imgUrl",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",

		b.id AS "goodsSpecification.id",
		b.specification_name AS "goodsSpecification.specificationName"
	</sql>
	
	<sql id="goodsSpecificationValueJoins">
		LEFT JOIN goods_specification b ON b.id = a.specification_id
	</sql>
    
	<select id="get" resultType="GoodsSpecificationValue">
		SELECT 
			<include refid="goodsSpecificationValueColumns"/>
		FROM goods_specification_value a
		<include refid="goodsSpecificationValueJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GoodsSpecificationValue">
		SELECT 
			<include refid="goodsSpecificationValueColumns"/>
		FROM goods_specification_value a
		<include refid="goodsSpecificationValueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="goodsSpecification != null and goodsSpecification != ''">
				AND a.specification_id = #{goodsSpecification.id}
			</if>
			<if test="goodsId != null and goodsId != ''">
				AND a.goods_id = #{goodsId}
			</if>
			<if test="specificationGroup != null and specificationGroup != ''">
				AND a.specification_group = #{specificationGroup}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>

	<select id="getGoodsSpecificationValueListByGoodsId" resultType="GoodsSpecificationValue" parameterType="com.zjy.losonkei.modules.goods.entity.Goods">
		SELECT s.specification_name AS "goodsSpecification.specificationName",
		v.specification_id AS "goodsSpecification.id",
		v.specification_group,
		v.specification_value
		FROM goods_specification_value v
		LEFT JOIN goods_specification s ON v.specification_id = s.id
		<where>
			v.specification_group IN
			( SELECT g.specification_group FROM goods_all g WHERE g.del_flag = #{DEL_FLAG_NORMAL} and g.goods_id = #{id} )
			AND v.goods_id = #{id}
			AND v.specification_value != ''
			AND s.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		  GROUP BY v.specification_value,s.specification_name
		  ORDER BY s.sort,v.specification_group
	</select>

	<select id="getSpecificationGroup" parameterType="com.zjy.losonkei.modules.goods.entity.GoodsAll" resultType="java.lang.Integer">
		SELECT a.specification_group FROM goods_specification_value a
		<foreach collection="goodsSpecificationValues" item="item" index="index">
			<if test="index > 0">
				LEFT JOIN goods_specification_value b${index}
				ON b${index}.goods_id = a.goods_id
				AND b${index}.specification_group = a.specification_group
			</if>
		</foreach>
		<where>
			a.goods_id = #{goodsId}
			<foreach collection="goodsSpecificationValues" item="item" index="index">
				<if test="index == 0">
					AND a.specification_id = #{item.goodsSpecification.id}
					AND a.specification_value = #{item.specificationValue}
				</if>
				<if test="index > 0">
					AND b${index}.specification_id = #{item.goodsSpecification.id}
					AND b${index}.specification_value = #{item.specificationValue}
				</if>
			</foreach>
		</where>
	</select>
	
	<select id="findAllList" resultType="GoodsSpecificationValue">
		SELECT 
			<include refid="goodsSpecificationValueColumns"/>
		FROM goods_specification_value a
		<include refid="goodsSpecificationValueJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO goods_specification_value(
			id,
			specification_id,
			specification_value,
			goods_id,
			specification_group,
			img_url,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{goodsSpecification.id},
			#{specificationValue},
			#{goodsId},
			#{specificationGroup},
			#{imgUrl},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE goods_specification_value SET 	
			specification_id = #{goodsSpecification.id},
			specification_value = #{specificationValue},
			goods_id = #{goodsId},
			specification_group = #{specificationGroup},
			img_url = #{imgUrl},
			remarks = #{remarks},
			create_date = #{createDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE goods_specification_value SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE specification_id = #{goodsSpecification.id}
			</otherwise>
		</choose>
	</update>
	<delete id="trueDelete">
		DELETE FROM goods_specification_value
		WHERE id = #{id}
	</delete>
</mapper>