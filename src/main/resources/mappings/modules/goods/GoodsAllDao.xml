<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjy.losonkei.modules.goods.dao.GoodsAllDao">
    
	<sql id="goodsAllColumns">
		a.id AS "id",
		a.price AS "price",
		a.cost_price AS "costPrice",
		a.src_price AS "srcPrice",
		a.stock AS "stock",
		a.goods_id AS "goodsId",
		a.specification_group AS "specificationGroup",
		a.remarks AS "remarks",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="goodsAllJoins">
	</sql>
    
	<select id="get" resultType="GoodsAll">
		SELECT 
			<include refid="goodsAllColumns"/>
		FROM goods_all a
		<include refid="goodsAllJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GoodsAll">
		SELECT 
			<include refid="goodsAllColumns"/>
		FROM goods_all a
		<include refid="goodsAllJoins"/>
		<where>
			1 = 1
			<if test="delFlag != null and delFlag != ''">
				AND a.del_flag = #{delFlag}
			</if>
			<if test="stock != null and stock != ''">
				AND a.stock = #{stock}
			</if>
			<if test="goodsId != null and goodsId != ''">
				AND a.goods_id = #{goodsId}
			</if>
			<if test="specificationGroup != null and specificationGroup != ''">
				AND a.specification_group = #{specificationGroup}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.specification_group ASC
			</otherwise>
		</choose>
	</select>

	<select id="findListForStock" resultType="GoodsAll">
		SELECT
		<include refid="goodsAllColumns"/> ,
		g.id AS "goods.id",
		g.goods_name AS "goods.goodsName",
		g.state AS "goods.state",
		g.flag AS "goods.flag",

		b.category_name AS "goods.goodsCategory.categoryName"
		FROM goods_all a
		LEFT JOIN goods g ON a.goods_id = g.id
		LEFT JOIN goods_category b ON b.id = g.goods_category_id
		<where>
			1 = 1
			AND g.del_flag = #{DEL_FLAG_NORMAL}
			<if test="delFlag != null and delFlag != ''">
				AND a.del_flag = #{delFlag}
			</if>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<choose>
				<when test="beginStock != null and endStock != null">
					AND a.stock BETWEEN #{beginStock} AND #{endStock}
				</when>
				<when test="beginStock != null">
					AND a.stock &gt;= #{beginStock}
				</when>
				<when test="endStock != null">
					AND a.stock &lt;= #{endStock}
				</when>
			</choose>
			<if test="goods.goodsName != null and goods.goodsName != ''">
				AND g.goods_name LIKE
				<if test="dbName == 'oracle'">'%'||#{goods.goodsName}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{goods.goodsName}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{goods.goodsName},'%')</if>
			</if>
			<if test="goodsId != null and goodsId != ''">
				AND a.goods_id = #{goodsId}
			</if>
			<if test="goods.flag != null and goods.flag != ''">
				AND g.flag = #{goods.flag}
			</if>
			<choose>
				<when test="goods.state != null and goods.state != ''">
					AND g.state = #{goods.state}
				</when>
			</choose>
				AND g.state != #{goods.STATE_INVENTING}
			<if test="goods.keywords != null and goods.keywords != ''">
				AND g.keywords LIKE
				<if test="dbName == 'oracle'">'%'||#{goods.keywords}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{goods.keywords}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{goods.keywords},'%')</if>
			</if>
			<if test="goods.goodsCategory != null and goods.goodsCategory.id != null and goods.goodsCategory.id != ''">
				AND b.id = #{goods.goodsCategory.id} OR b.parent_ids LIKE
				<if test="dbName == 'oracle'">'%'||#{goods.goodsCategory.id}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{goods.goodsCategory.id}+'%'</if>
				<if test="dbName == 'mysql'">concat('%',#{goods.goodsCategory.id},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY g.update_date DESC, a.specification_group ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="GoodsAll">
		SELECT 
			<include refid="goodsAllColumns"/>
		FROM goods_all a
		<include refid="goodsAllJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO goods_all(
			id,
			price,
			cost_price,
			src_price,
			stock,
			goods_id,
			specification_group,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{price},
			#{costPrice},
			#{srcPrice},
			#{stock},
			#{goodsId},
			#{specificationGroup},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE goods_all SET 	
			price = #{price},
			cost_price = #{costPrice},
			src_price = #{srcPrice},
			stock = #{stock},
			goods_id = #{goodsId},
			specification_group = #{specificationGroup},
			remarks = #{remarks},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			del_flag = #{delFlag}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE goods_all SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<delete id="trueDelete">
		DELETE FROM goods_all
		 WHERE id = #{id}
	</delete>
</mapper>